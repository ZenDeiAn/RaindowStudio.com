---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { Hero as Props } from '~/types';
import { getPermalink } from '~/utils/permalinks';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
  page_down_button = await Astro.slots.render('image'),
  nextUrl,
  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="absolute top-0 left-0 w-full h-screen not-prose" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>

  <div class="relative max-w-7xl mx-auto justify-center px-4 sm:px-6 h-screen flex items-center">
    <div class="pt-0 pointer-events-none"></div>
    <div class="py-12 md:py-20">
      <div class="text-center pb-10 md:pb-16 max-w-5xl mx-auto flex flex-col justify-center">
        {
          tagline && (
            <p
              class="text-base text-shadow text-neutral-50 dark:text-neutral-800 text-secondary font-bold tracking-wide uppercase intersect-once intersect-quarter motion-safe:md:opacity-1 motion-safe:md:intersect:animate-fade"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <h1
              class="text-5xl text-shadow md:text-6xl font-bold text-neutral-50 dark:text-neutral-800 leading-tighter tracking-tighter mb-4 font-heading intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:intersect:animate-fade"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto">
          { 
            subtitle && (
              <p
                class="text-xl text-shadow text-neutral-50 dark:text-neutral-800 mb-6 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
                set:html={subtitle}
              />
            )
          }
          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 intersect-once intersect-quarter motion-safe:md:opacity-1 motion-safe:md:intersect:animate-fade">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div
        class="intersect-once intercept-no-queue intersect-quarter motion-safe:md:opacity-1 motion-safe:md:intersect:animate-fade"
      >
        {
          image && (
            <div class="relative m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="mx-auto rounded-md w-full"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>  
</section>

<a id="nextUrl" class="mt-[calc(100vh-7rem)] h-0 flex" />
<div class="relative">
  <a
    class="py-[1.1rem] transition duration-300 ease-in-out hover:backdrop-blur-md focus:outline-none flex items-center"
    href={getPermalink(nextUrl ? nextUrl : '#nextUrl')}
  />
  <slot name="page_down_button">
    {page_down_button ? <Fragment set:html={page_down_button} /> : null}
  </slot>
</div>

<style>
  .text-shadow {
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.6); /* Custom shadow */
  }
</style>