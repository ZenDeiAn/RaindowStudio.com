---
import { t, changeLanguage } from "i18next";
import { localizePath } from "astro-i18next";
import { getPermalink } from "~/utils/permalinks";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import Layout from "~/layouts/PageLayout.astro";
import BlogList from "~/components/blog/List.astro";
import Headline from "~/components/blog/Headline.astro";
import Pagination from "~/components/blog/Pagination.astro";
// import PostTags from "~/components/blog/Tags.astro";
import { blogListRobots, getStaticPathsBlogList } from "~/utils/blog";
import Header from "~/components/widgets/Header.astro";

changeLanguage("en");

export const lang = "en";
export const prerender = true;
export const getStaticPaths = (async ({ paginate }) => {
    const list = await getStaticPathsBlogList({ paginate }, lang);
    return list;
}) satisfies GetStaticPaths;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;
// const allCategories = await findCategories();
// const allTags = await findTags();
const metadata = {
    title: `Blog${currentPage > 1 ? ` â€” Page ${currentPage}` : ""}`,
    robots: {
        index: blogListRobots?.index && currentPage === 1,
        follow: blogListRobots?.follow,
    },
    openGraph: {
        type: "blog",
    },
};
---

<Layout metadata={metadata}>
  <Fragment slot="header">
  <Header
      logoLink={localizePath('')}
      links={[
        {
          text: t("index.header.blog.title"),
          links: [
            {
              text: t("index.header.blog.list"),
              href: localizePath('/blog'),
            },
            {
              text: t("index.header.blog.article"),
              href: getPermalink("get-started-website-with-astro-tailwind-css", "post"),
            },
            {
              text: t("index.header.blog.category"),
              href: getPermalink("tutorials", "category"),
            },
            {
              text: t("index.header.blog.tag"),
              href: getPermalink("astro", "tag"),
            },
          ],
        },
        {
          text: t("index.header.aboutme"),
          href: localizePath('/homes/personal'),
        },
      ]}
      actions={[{ text: "Download", href: "https://github.com/onwidget/astrowind", target: "_blank" }]}
      isSticky
      showRssFeed
      showToggleTheme
      showLanguage
    />
  </Fragment>

  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline
      subtitle="A statically generated blog example with news, tutorials, resources and other interesting content related to AstroWind"
    >
    </Headline>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
    <!--
      <PostTags tags={allCategories} class="mb-2" title="Search by Categories:" isCategory />
      <PostTags tags={allTags}  title="Search by Tags:" />
    -->
  </section>
</Layout>
